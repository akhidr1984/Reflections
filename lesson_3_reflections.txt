1) When would you want to use a remote repository rather than keeping all your work local?

when i'm going to be collaborating with other developers and i want everyone to have access to the project

2) Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

so i can have control on which changes to pull and which to not

3) Describe the differences between forks, clones, and branches. When would you use one instead of another?

forks: copies repos on github onto my account on github to be able to work on the source coude myself if i don't have permission to modify the original (github to github)
clones: downloads the commit history of a repo from github to my local machine while setting the github repo as a remote
branch: commits that are on a different path from the master path and who can have any experimental changes made to them while not affecting the master path

4) What is the benefit of having a copy of the last known state of the remote stored locally?

to be able to tell if other people made changes to the remote that are not in my local repo

5) When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

when working with others, I shouldn't change master individually so as to give them a chance to review the changes, and the same goes for everyone else, instead any changes should be made on a separate branch created specificaly for this purpose and then creating a pull request to give others the chance to review the changes, and when accepeted the master will be updated. when there is a conflict, the changes must be resolved localy not on github. so i merge one of the changes on github by accepting the pull reqeust, then pull the master into my local repo, merge it with my changed branch, resolving the conflict in the process, push my changes to the branch on github, then create a pull request from the branch into master.
